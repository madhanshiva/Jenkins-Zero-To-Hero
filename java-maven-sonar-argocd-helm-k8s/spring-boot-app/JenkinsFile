pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  environment {
    ORIGINAL_IMAGE = 'abhishekf5/maven-abhishek-docker-agent:v1'
    NEW_TAG = "mvmadhan/maven-abhishek-docker-agent:${BUILD_NUMBER}"
    DOCKER_IMAGE = "mvmadhan/maven-abhishek-docker-agent:${BUILD_NUMBER}"
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // Uncomment and configure if needed
        // git branch: 'main', url: 'https://github.com/madhanshiva/Jenkins-Zero-To-Hero'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://172.25.117.145:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build Docker Image') {
      steps {
        script {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          sh 'docker images' // Debug step to list images
        }
      }
    }
    stage('Tag Docker Image') {
      steps {
        script {
          sh "docker tag ${DOCKER_IMAGE} ${NEW_TAG}"
        }
      }
    }
    stage('Push Docker Images') {
      environment {
        REGISTRY_CREDENTIALS = credentials('docker_id')
      }
      steps {
        script {
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker_id") {
            dockerImage.push()
            sh "docker push ${NEW_TAG}"
          }
        }
      }
    }
  stage('Update Deployment File') {
  environment {
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "madhanshiva"
  }
  steps {
    withCredentials([string(credentialsId: 'github-push', variable: 'GITHUB_TOKEN')]) {
      sh '''
        git config user.email "madhanshiva.xyz@gmail.com"
        git config user.name "madhan shiva"
        BUILD_NUMBER=${BUILD_NUMBER}
        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        git add -A
        git diff-index --quiet HEAD || git commit -m "Update deployment image to version ${BUILD_NUMBER}"
        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
      '''
    }
  }
}
  }
}
