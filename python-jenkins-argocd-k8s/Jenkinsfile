pipeline {
    agent any
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: '1beef06e-952e-4633-a1a7-a641483784ac', url: 'https://github.com/madhanshiva/cicd-end-to-end'
            }
        }

        stage('Build Docker') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker_id', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                        echo 'Build Docker Image'
                        docker build -t mvmadhan/cicd-e2e:${BUILD_NUMBER} .
                        '''
                    }
                }
            }
        }

        stage('Push the artifacts') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker_id', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                        echo 'Push to Repo'
                        docker push mvmadhan/cicd-e2e:${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }
        
        stage('Checkout K8S manifest SCM') {
            steps {
                git branch: 'main', credentialsId: '1beef06e-952e-4633-a1a7-a641483784ac', url: 'https://github.com/madhanshiva/cicd-end-to-end'
            }
        }
        
        stage('Update K8S manifest & push to Repo') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: '1beef06e-952e-4633-a1a7-a641483784ac', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh '''
                        # List files and check current git status
                        ls -al deploy
                        git status

                        # Check if deploy.yaml exists
                        if [ -f deploy/deploy.yaml ]; then
                            echo "Current deploy.yaml content:"
                            cat deploy/deploy.yaml
                            
                            # Perform the update
                            sed -i "s/madhanshiva\/cicd-e2e/mvmadhan\/cicd-e2e/g" deploy/deploy.yaml
                            sed -i "s/32/${BUILD_NUMBER}/g" deploy/deploy.yaml
                            
                            # Verify the update
                            echo "Updated deploy.yaml content:"
                            cat deploy/deploy.yaml

                            # Check git status and perform commit
                            cd deploy
                            git status
                            git add deploy.yaml
                            git commit -m 'Updated the deploy yaml | Jenkins Pipeline'
                            git remote -v
                            git push https://github.com/madhanshiva/cicd-end-to-end.git HEAD:main
                        else
                            echo "deploy.yaml not found in deploy directory"
                            exit 1
                        fi
                        '''
                    }
                }
            }
        }
    }
}
